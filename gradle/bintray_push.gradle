apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.jfrog.artifactory-upload'

group = GROUP

// Both the artifactory and bintray plugins depend on this singular
// global `version` variable. As such, we need to configure it based
// on which task we're running.
//
// The solution here is brittle; it just checks whether 'bintrayUpload'
// was called for execution, otherwise it assumes SNAPSHOT. If we
// were to wait until the task graph was built, we'd be too late
// (the plugins would already have used `version`).
boolean isReleaseBuild = gradle.startParameter.taskNames.contains('bintrayUpload')
version = isReleaseBuild ? VERSION_NAME : "$VERSION_NAME-SNAPSHOT"
logger.info("Library using version=$project.version")

// Create source/javadoc artifacts for publishing
apply from: "$rootDir/gradle/artifacts.gradle"

// Configure android-maven-gradle-plugin
install {
    repositories.mavenInstaller {
        pom {
            project {
                name POM_NAME
                description POM_DESCRIPTION
                packaging POM_PACKAGING
                url POM_URL

                licenses {
                    license {
                        name POM_LICENCE_NAME
                        url POM_LICENCE_URL
                        distribution POM_LICENCE_DIST
                    }
                }

                scm {
                    url POM_SCM_URL
                    connection POM_SCM_CONNECTION
                    developerConnection POM_SCM_DEV_CONNECTION
                }

// Replace all developers with yours
                developers {
                    developer {
                        id 'z593492734'
                        name '黑色小老虎'
                        email 'mengyuanzz@126.com'
                    }
                }
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

// Configure artifactory (for publishing snapshots)
// Based on NebulaOJOPublishingPlugin (from nebula-bintray-plugin)
artifactory {
    contextUrl = 'https://oss.jfrog.org'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            if (properties.hasProperty("bintray.user")) {
                username = properties.getProperty("bintray.user")
                password = properties.getProperty("bintray.apikey")
            }
        }

        defaults {
            publishConfigs('archives')
        }
    }
}

// Configure gradle-bintray-plugin (for publishing releases)
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    publish true
    pkg {
        repo = "maven"

// Replace library name with yours
// 将name改为你自己开原库的名字（jcenter和Maven Central上开原库的名字）
        name = "com-my-carouselfigure"

// Replace all labels with yours
// 将labels改为你自己开原库相关的标签（便于别人搜索到你的开原库）
        websiteUrl = WEB_SITE_URL
        issueTrackerUrl = ISSUE_TRACKER_URL
        vcsUrl = VCS_URL
        licenses = ["Apache-2.0"]
        version {
            gpg {
                sign = true
                passphrase = properties.getProperty("bintray.gpg.password")
            }
            mavenCentralSync {
                sync = true
                user = properties.getProperty("bintray.oss.user")
                password = properties.getProperty("bintray.oss.password")
                close = '1'
            }
        }
    }
}